/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.github.mikan.sample.qiita.model


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param description 自己紹介文
 * @param facebookId Facebook ID
 * @param followeesCount このユーザーがフォローしているユーザーの数
 * @param followersCount このユーザーをフォローしているユーザーの数
 * @param githubLoginName GitHub ID
 * @param id ユーザーID
 * @param itemsCount このユーザーが qiita.com 上で公開している記事の数 (Qiita Teamでの記事数は含まれません)
 * @param linkedinId LinkedIn ID
 * @param location 居住地
 * @param name 設定している名前
 * @param organization 所属している組織
 * @param permanentId ユーザーごとに割り当てられる整数のID
 * @param profileImageUrl 設定しているプロフィール画像のURL
 * @param teamOnly Qiita Team専用モードに設定されているかどうか
 * @param twitterScreenName Twitterのスクリーンネーム
 * @param websiteUrl 設定しているWebサイトのURL
 */
@Serializable

data class User (

    /* 自己紹介文 */
    @SerialName(value = "description") @Required val description: kotlin.String?,

    /* Facebook ID */
    @SerialName(value = "facebook_id") @Required val facebookId: kotlin.String?,

    /* このユーザーがフォローしているユーザーの数 */
    @SerialName(value = "followees_count") @Required val followeesCount: kotlin.Int,

    /* このユーザーをフォローしているユーザーの数 */
    @SerialName(value = "followers_count") @Required val followersCount: kotlin.Int,

    /* GitHub ID */
    @SerialName(value = "github_login_name") @Required val githubLoginName: kotlin.String?,

    /* ユーザーID */
    @SerialName(value = "id") @Required val id: kotlin.String,

    /* このユーザーが qiita.com 上で公開している記事の数 (Qiita Teamでの記事数は含まれません) */
    @SerialName(value = "items_count") @Required val itemsCount: kotlin.Int,

    /* LinkedIn ID */
    @SerialName(value = "linkedin_id") @Required val linkedinId: kotlin.String?,

    /* 居住地 */
    @SerialName(value = "location") @Required val location: kotlin.String?,

    /* 設定している名前 */
    @SerialName(value = "name") @Required val name: kotlin.String?,

    /* 所属している組織 */
    @SerialName(value = "organization") @Required val organization: kotlin.String?,

    /* ユーザーごとに割り当てられる整数のID */
    @SerialName(value = "permanent_id") @Required val permanentId: kotlin.Int,

    /* 設定しているプロフィール画像のURL */
    @SerialName(value = "profile_image_url") @Required val profileImageUrl: kotlin.String,

    /* Qiita Team専用モードに設定されているかどうか */
    @SerialName(value = "team_only") @Required val teamOnly: kotlin.Boolean,

    /* Twitterのスクリーンネーム */
    @SerialName(value = "twitter_screen_name") @Required val twitterScreenName: kotlin.String?,

    /* 設定しているWebサイトのURL */
    @SerialName(value = "website_url") @Required val websiteUrl: kotlin.String?

) {


}

